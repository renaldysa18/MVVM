apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: "androidx.navigation.safeargs"

def config = rootProject.extensions.getByName("ext")

android {
    compileSdkVersion config["compileSdkVersion"]
    buildToolsVersion config["buildToolsVersion"]
    defaultConfig {
        applicationId "com.redveloper.mvvm"
        minSdkVersion config["minSdkVersion"]
        targetSdkVersion config["targetSdkVersion"]
        versionCode config["versionCode"]
        versionName config["versionName"]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation config.commonDependency.kotlin
    implementation config.commonDependency.appCompat
    implementation config.commonDependency.core
    implementation config.commonDependency.constraintLayout
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation config.commonDependency.junit
    androidTestImplementation config.commonDependency.testRunner
    androidTestImplementation config.commonDependency.espresso

    //service
    implementation config.serviceDependency.retrofit
    implementation config.serviceDependency.retrofitRxjava
    implementation config.serviceDependency.retrofitGson
    implementation config.serviceDependency.rxjavaReactive
    implementation config.serviceDependency.rxAndroid
    implementation config.serviceDependency.gson

    //image
    implementation config.serviceDependency.glide
    annotationProcessor config.serviceDependency.glideCompiler

    //easy pref
    implementation config.serviceDependency.easyPref

    //recycler and card
    implementation config.commonDependency.recyclerview
    implementation config.commonDependency.cardview

    //kotlin coroutines
    implementation config.serviceDependency.kotlinCoroutinesCore
    implementation config.serviceDependency.kotlinCoroutinesAndroid

    //viewmodel and livedata
    implementation config.serviceDependency.viewModel

    //kodelin depedency injection
    implementation config.serviceDependency.kodelinInjection
    implementation config.serviceDependency.kodelinInjectionAndroid

    //room
    implementation config.dataDependency.room
    implementation config.dataDependency.roomKtx
    kapt config.dataDependency.roomKapt

    //android navigation architecture
    implementation config.commonDependency.navFragment
    implementation config.commonDependency.navUI
}
